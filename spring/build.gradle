configurations {
	jaxb
}

buildscript {
	repositories {
		maven {
			url 'https://javarepo.s4f3.io/plugins-release'
		}
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE"
		classpath "io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE"
		classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.3"
		classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE"
	}
}

allprojects {
	apply plugin: "com.jfrog.artifactory"
}

artifactory {
	contextUrl = "https://javarepo.s4f3.io"
	publish {
		repository {
			repoKey = 'libs-release-local'
			maven = true
		}
	}
	resolve {
		repository {
			repoKey = 'libs-release'
			maven = true
		}
	}
}


// This wouldn't be needed with Spring Boot 1.3
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

// tag::wsdl[]
task genJaxb {
		ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
		ext.classesDir = "${buildDir}/classes/jaxb"
		ext.schema = "http://wsf.cdyne.com/WeatherWS/Weather.asmx?wsdl"

		outputs.dir classesDir

		doLast() {
			project.ant {
				taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
				classpath: configurations.jaxb.asPath
				mkdir(dir: sourcesDir)
				mkdir(dir: classesDir)

				xjc(destdir: sourcesDir, schema: schema,
				package: "hello.wsdl") {
					arg(value: "-wsdl")
					produces(dir: sourcesDir, includes: "**/*.java")
				}

			javac(destdir: classesDir, source: 1.7, target: 1.7, debug: true,
										 debugLevel: "lines,vars,source",
										 classpath: configurations.jaxb.asPath) {
										 src(path: sourcesDir)
										 include(name: "**/*.java")
										 include(name: "*.java")
										 }

			copy(todir: classesDir) {
				fileset(dir: sourcesDir, erroronmissingdir: false) {
					exclude(name: "**/*.java")
				}
			}
		}
	}
}
// end::wsdl[]

jar {
	from genJaxb.classesDir
	baseName = 'gs-rest-service'
	version =  '0.1.0'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencyManagement {
	imports {
		mavenBom 'org.springframework.boot:spring-boot-starter-parent:1.3.0.RELEASE'
}
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter")
	compile("org.springframework.ws:spring-ws-core")
	compile(files(genJaxb.classesDir).builtBy(genJaxb))

	jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"

	testCompile("junit:junit")
}
