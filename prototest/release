#!/usr/bin/env bash

set -euo pipefail

load() {
	local ns="hkjn.me"
	local p="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
	while [ "$p" != "" ] && [ $(basename $p) != "$ns" ]; do p="${p/\/$(basename $p)/}"; done
	source "$p/lib/$1" 2>/dev/null || { echo "[$0] FATAL: Couldn't find $ns/lib/$1." >&2; exit 1; }
	export BASE="$p"
}
load "logging.sh"
cd "$BASE/junk/prototest"

declare VERSION="$(cat VERSION)"
declare COMMIT=$(git log -1 --pretty=format:"%h")
declare COMMIT_MSG=$(git log --format=%B -n 1)
export GITHUB_TOKEN=${GITHUB_TOKEN:-""}
[[ "$GITHUB_TOKEN" ]] || {
  fatal "No GITHUB_TOKEN set in environment.o"
}

info "About to release v${VERSION} of prototest at $COMMIT: '$COMMIT_MSG'."
confirm

info "Building report_client.."
go build -o report_client ./client/
info "Building report_server.."
go build -o report_server ./server/

# TODO: Verify repo is in clean state, as repo_report would see it, before tagging and releasing.
declare PAYLOAD=$(cat <<EOT
{
  "tag_name": "$VERSION",
  "name": "$VERSION",
  "body": "$COMMIT_MSG",
  "draft": false,
  "prerelease": false
}
EOT
)
info "Syncing down changes from remote.."
git pull
info "Pushing any changes to remote.."
git push
info "Tagging $VERSION at $COMMIT.."
git tag $VERSION $COMMIT
git push origin --tags

info "Creating release.."
declare RESPONSE=$(curl -s \
     -H "Content-type: application/json" \
     -H "Accept: application/vnd.github.v3+json" \
     -H "Authorization: token $GITHUB_TOKEN" \
     --data "$PAYLOAD" \
     https://api.github.com/repos/hkjn/junk/releases)

debugV "Response is: $RESPONSE"
declare URL=$(echo "$RESPONSE" | jq -r ".upload_url")
debugV "URL is '$URL'"
URL=${URL%\{?name,label\}}
debugV "Stripped URL is '$URL'"

info "Uploading report_client.."
curl -H "Content-type: application/octet-stream" \
     -H "Accept: application/vnd.github.v3+json" \
     -H "Authorization: token $GITHUB_TOKEN" \
     --data-binary @report_client \
     --progress-bar \ 
     "${URL}?name=report_client" | tee -a "upload_progress.log" ; test ${PIPESTATUS[0]} -eq 0

info "Uploading report_server.."
curl -H "Content-type: application/octet-stream" \
     -H "Accept: application/vnd.github.v3+json" \
     -H "Authorization: token $GITHUB_TOKEN" \
     --data-binary @report_server \
     --progress-bar \
     "${URL}?name=report_server" | tee -a "upload_progress.log" ; test ${PIPESTATUS[0]} -eq 0
